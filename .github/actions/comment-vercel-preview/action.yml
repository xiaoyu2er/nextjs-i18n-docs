name: 'Comment Vercel Preview'
description: 'Comment Vercel deploy preview links on a PR.'
inputs:
  deploy_results_path:
    description: 'Path to the JSON file containing all deploy results.'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Comment PR with all Vercel Preview Links
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = process.env.DEPLOY_RESULTS_PATH;
          const marker = '<!-- vercel-preview-links -->';
          const results = JSON.parse(fs.readFileSync(path, 'utf8'));
          let body = `${marker}\n`;
          body += `## Vercel Deploy Previews\n`;
          console.log('Deploy results:', results);
          // Handle array of deploy results
          for (const job of results) {
            if (job && job.label) {
              body += `- **${job.label}**: [Inspect](${job.inspect_url}) | [Preview](${job.preview_url})\n`;
            }
          }
          // Find existing comment
          const { data: comments } = await github.rest.issues.listComments({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          const existing = comments.find(c => c.body && c.body.includes(marker));
          if (existing) {
            await github.rest.issues.updateComment({
              comment_id: existing.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
          } else {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
          }
      env:
        DEPLOY_RESULTS_PATH: ${{ inputs.deploy_results_path }}
